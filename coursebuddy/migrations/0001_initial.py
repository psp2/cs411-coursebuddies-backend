# Generated by Django 3.0.5 on 2020-05-04 04:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('username', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProfessorRatingsFromUser',
            fields=[
                ('username', models.CharField(db_column='Username', max_length=45)),
                ('crn', models.IntegerField(db_column='CRN')),
                ('professor_ratings', models.FloatField(blank=True, db_column='Professor_ratings', null=True)),
                ('difficulty', models.CharField(blank=True, db_column='Difficulty', max_length=45, null=True)),
                ('usernamecrn', models.CharField(db_column='UsernameCrn', max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Professor_ratings_from_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProfessorRatingsFromWebsites',
            fields=[
                ('professor', models.CharField(db_column='Professor', max_length=45, primary_key=True, serialize=False)),
                ('professor_ratings', models.FloatField(blank=True, db_column='Professor_ratings', null=True)),
                ('total', models.IntegerField(blank=True, db_column='Total', null=True)),
                ('difficulty', models.FloatField(blank=True, db_column='Difficulty', null=True)),
                ('crn', models.IntegerField(db_column='CRN')),
            ],
            options={
                'db_table': 'Professor_ratings_from_websites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sp19',
            fields=[
                ('subject', models.CharField(blank=True, db_column='Subject', max_length=10, null=True)),
                ('course', models.IntegerField(blank=True, db_column='Course', null=True)),
                ('crn', models.IntegerField(db_column='CRN', primary_key=True, serialize=False)),
                ('coursetitle', models.CharField(blank=True, db_column='CourseTitle', max_length=45, null=True)),
                ('schedtype', models.CharField(blank=True, db_column='SchedType', max_length=45, null=True)),
                ('a_field', models.IntegerField(blank=True, db_column='A+', null=True)),
                ('a', models.IntegerField(blank=True, db_column='A', null=True)),
                ('a_field_0', models.IntegerField(blank=True, db_column='A-', null=True)),
                ('b_field', models.IntegerField(blank=True, db_column='B+', null=True)),
                ('b', models.IntegerField(blank=True, db_column='B', null=True)),
                ('b_field_0', models.IntegerField(blank=True, db_column='B-', null=True)),
                ('c_field', models.IntegerField(blank=True, db_column='C+', null=True)),
                ('c', models.IntegerField(blank=True, db_column='C', null=True)),
                ('c_field_0', models.IntegerField(blank=True, db_column='C-', null=True)),
                ('d_field', models.IntegerField(blank=True, db_column='D+', null=True)),
                ('d', models.IntegerField(blank=True, db_column='D', null=True)),
                ('d_field_0', models.IntegerField(blank=True, db_column='D-', null=True)),
                ('f', models.IntegerField(blank=True, db_column='F', null=True)),
                ('w', models.IntegerField(blank=True, db_column='W', null=True)),
                ('averagegpa', models.FloatField(blank=True, db_column='AverageGpa', null=True)),
                ('professor', models.CharField(blank=True, db_column='Professor', max_length=45, null=True)),
            ],
            options={
                'db_table': 'sp19',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Studygroup',
            fields=[
                ('username', models.IntegerField(db_column='Username', primary_key=True, serialize=False)),
                ('major', models.CharField(db_column='Major', max_length=45)),
                ('email', models.CharField(db_column='Email', max_length=45)),
                ('year', models.CharField(db_column='Year', max_length=45)),
                ('crn', models.IntegerField(db_column='CRN')),
            ],
            options={
                'db_table': 'StudyGroup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('crn', models.IntegerField(db_column='CRN')),
                ('professor', models.CharField(db_column='Professor', max_length=45, primary_key=True, serialize=False)),
                ('averagegpa', models.FloatField(blank=True, db_column='AverageGpa', null=True)),
                ('professor_ratings', models.FloatField(blank=True, db_column='Professor_ratings', null=True)),
                ('difficulty', models.CharField(blank=True, db_column='Difficulty', max_length=45, null=True)),
            ],
        ),
    ]
